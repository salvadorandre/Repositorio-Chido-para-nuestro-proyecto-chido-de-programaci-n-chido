// <auto-generated />
using System;
using API_Cursos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Cursos.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250514032448_fixtables")]
    partial class fixtables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_Cursos.DTOs.Curso", b =>
                {
                    b.Property<int>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCurso"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCurso");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("API_Cursos.Entities.Asignacion", b =>
                {
                    b.Property<int>("IDAsignacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDAsignacion"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int>("ProfesorCursoId")
                        .HasColumnType("int");

                    b.HasKey("IDAsignacion");

                    b.HasIndex("EstudianteId");

                    b.HasIndex("ProfesorCursoId");

                    b.ToTable("Asignacion");
                });

            modelBuilder.Entity("API_Cursos.Entities.Estudiante", b =>
                {
                    b.Property<int>("IdEstudiante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstudiante"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Edad")
                        .HasColumnType("real");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Grado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Promedio")
                        .HasColumnType("real");

                    b.HasKey("IdEstudiante");

                    b.ToTable("Estudiante");
                });

            modelBuilder.Entity("API_Cursos.Entities.Profesor", b =>
                {
                    b.Property<int>("IdProfesor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProfesor"));

                    b.Property<int>("CapacidadEstudiantes")
                        .HasColumnType("int");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProfesor");

                    b.ToTable("Profesor");
                });

            modelBuilder.Entity("API_Cursos.Entities.ProfesorCurso", b =>
                {
                    b.Property<int>("IdProfesorCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProfesorCurso"));

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("ProfesorId")
                        .HasColumnType("int");

                    b.HasKey("IdProfesorCurso");

                    b.HasIndex("CursoId");

                    b.HasIndex("ProfesorId");

                    b.ToTable("ProfesorCurso");
                });

            modelBuilder.Entity("API_Cursos.Entities.Asignacion", b =>
                {
                    b.HasOne("API_Cursos.Entities.Estudiante", "Estudiante")
                        .WithMany("Asignacion")
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Cursos.Entities.ProfesorCurso", "ProfesorCurso")
                        .WithMany("Asignacion")
                        .HasForeignKey("ProfesorCursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiante");

                    b.Navigation("ProfesorCurso");
                });

            modelBuilder.Entity("API_Cursos.Entities.ProfesorCurso", b =>
                {
                    b.HasOne("API_Cursos.DTOs.Curso", "Curso")
                        .WithMany("ProfesorCurso")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Cursos.Entities.Profesor", "Profesor")
                        .WithMany("ProfesorCurso")
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("API_Cursos.DTOs.Curso", b =>
                {
                    b.Navigation("ProfesorCurso");
                });

            modelBuilder.Entity("API_Cursos.Entities.Estudiante", b =>
                {
                    b.Navigation("Asignacion");
                });

            modelBuilder.Entity("API_Cursos.Entities.Profesor", b =>
                {
                    b.Navigation("ProfesorCurso");
                });

            modelBuilder.Entity("API_Cursos.Entities.ProfesorCurso", b =>
                {
                    b.Navigation("Asignacion");
                });
#pragma warning restore 612, 618
        }
    }
}
